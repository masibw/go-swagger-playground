// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"go-swagger-playground/server/gen/models"
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostUserOKCode is the HTTP code returned for type PostUserOK
const PostUserOKCode int = 200

/*PostUserOK User Created

swagger:response postUserOK
*/
type PostUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewPostUserOK creates PostUserOK with default headers values
func NewPostUserOK() *PostUserOK {

	return &PostUserOK{}
}

// WithPayload adds the payload to the post user o k response
func (o *PostUserOK) WithPayload(payload *models.User) *PostUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user o k response
func (o *PostUserOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUserBadRequestCode is the HTTP code returned for type PostUserBadRequest
const PostUserBadRequestCode int = 400

/*PostUserBadRequest Missing Required Information

swagger:response postUserBadRequest
*/
type PostUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPostUserBadRequest creates PostUserBadRequest with default headers values
func NewPostUserBadRequest() *PostUserBadRequest {

	return &PostUserBadRequest{}
}

// WithPayload adds the payload to the post user bad request response
func (o *PostUserBadRequest) WithPayload(payload interface{}) *PostUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user bad request response
func (o *PostUserBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostUserConflictCode is the HTTP code returned for type PostUserConflict
const PostUserConflictCode int = 409

/*PostUserConflict Email Already Taken

swagger:response postUserConflict
*/
type PostUserConflict struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPostUserConflict creates PostUserConflict with default headers values
func NewPostUserConflict() *PostUserConflict {

	return &PostUserConflict{}
}

// WithPayload adds the payload to the post user conflict response
func (o *PostUserConflict) WithPayload(payload interface{}) *PostUserConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user conflict response
func (o *PostUserConflict) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
